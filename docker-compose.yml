version: '3.8'

services:
  postgres:
    image: pgvector/pgvector:pg15
    container_name: rbac_postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: rbac_memory_db
      POSTGRES_USER: rbac_user
      POSTGRES_PASSWORD: rbac_password
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8 --lc-collate=C --lc-ctype=C"
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./sql/init.sql/init.sql:/docker-entrypoint-initdb.d/01-init.sql
      - ./sql/schema.sql/schema.sql:/docker-entrypoint-initdb.d/02-schema.sql
    networks:
      - rbac_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U rbac_user -d rbac_memory_db"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    container_name: rbac_redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - rbac_network
    command: redis-server --appendonly yes
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: rbac_pgadmin
    restart: unless-stopped
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: admin
    ports:
      - "8080:80"
    depends_on:
      - postgres
    networks:
      - rbac_network
    volumes:
      - pgadmin_data:/var/lib/pgadmin

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
  pgadmin_data:
    driver: local

networks:
  rbac_network:
    driver: bridge